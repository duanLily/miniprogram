<!--demo.wxml-->
  <!-- view 中包含了 text 标签 -->
<view class="container">
  <!--一个简单的文本标签 -->
  <text>hello world</text>

  <!--属性值也可以动态的去改变，有所不同的是，属性值必须被包裹在双引号中-->
  <text catchtap='onTestTap' data-test="{{test}}">{{showTest}}</text>

  <!--数据绑定：数据来自js的data里面的time变量-->
  <text>当前时间：{{time}}</text>

  <!--没有被定义的变量的或者是被设置为 undefined 的变量不会被同步到 wxml 中-->
  <view>{{var1}}</view>
  <view>{{var2}}</view>
  <view>{{var3}}</view>
  <view>{{var4}}</view>

  <!--逻辑语法-->
  // 三目运算
  <!-- 根据 a 的值是否等于 10 在页面输出不同的内容 -->
  <text>{{ a === 10? "变量 a 等于10": "变量 a 不等于10"}}</text>
  // 算数运算
  <view>{{a + b}} + {{c}} + d</view>
  // 支持字符串的拼接
  <view>{{"nice" + name}}</view>
  //{{ }}中还可以直接放置数字、字符串或者是数组
  <text>{{[1,2,3]}}</text>
  <!-- 输出 1,2,3 -->
  <text>{{"hello world"}}</text>
  <!-- 输出 hello world -->

  <!--条件逻辑-->
  // 使用 wx:if="{{condition}}" 来判断是否需要渲染该代码块
  <view wx:if="{{condition}}">True</view>
  <view wx:if="{{condition1}}">False</view>
  // 使用 wx:elif 和 wx:else 来添加一个 else 块
  <view wx:if="{{length > 5}}">大于5</view>
  <view wx:elif="{{length > 2}}">大于2</view>
  <view wx:else>等于3</view>
  // wx:if 是一个控制属性，需要将它添加到一个标签上。如果要一次性判断多个组件标签，可以使用一个
  <!-- <block/> -->标签将多个组件包装起来，并在上边使用 wx:if 控制属性。
  <block wx:if="{{true}}">
    <view>view1</view>
    <view>view2</view>
  </block>

  <!--列表渲染-->
  // 在组件上使用 wx:for 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。默认index，item
  <!-- array 是一个数组 -->
  <view wx:for="{{array}}">
    {{index}}: {{item.msg}}
  </view>
  // 使用 wx:for-item 指定数组当前元素的变量名，使用 wx:for-index 指定数组当前下标的变量名
  <view wx:for="{{array}}" wx:for-index="idx" wx:for-item="itemName">
    {{idx}}: {{itemName.msg}}
  </view>
  // 可将 wx:for 用在 <!--<block/>--> 标签上，以渲染一个包含多节点的结构块。
  <block wx:for="{{array}}">
    <view>{{index}}</view>
    <view>{{item.msg}}</view>
  </block>
  // 如列表中项目的位置会动态改变或者有新的项目添加到列表中，
  且希望列表中的项目保持自己的特征和状态
  （如 <!--<input/>--> 中的输入内容， <!--<switch/>--> 的选中状态）
  需要使用 wx:key 来指定列表中项目的唯一的标识符
  <switch wx:for="{{objectArray}}" wx:key="unique">{{item.id}}</switch>
  <button bindtap="switchFunction">Add to the switchFunction</button>
  <button bindtap="addToLast">Add to the last</button>
  <switch wx:for="{{numberArray}}" wx:key="*this">{{item}}</switch>
  <button bindtap="addNumberToLast">Add Number to the last</button>

  <!--模板-->


  <!--引用-->
  <import src="item.wxml"/>
  <template is="item" data="{{text: 'import Template'}}"/>
  <import src="importComponent/B.wxml"/>
  <template is="B"/>
  <import src="includeComponent/index.wxml"/>
  <template is="index"/>

  <!--共同属性-->

</view>
